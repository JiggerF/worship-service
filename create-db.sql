CREATE TABLE IF NOT EXISTS "song" (
	SongId INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL,
	SongTitle NVARCHAR(220),
    SongArtist NVARCHAR(220),
    SongGenre NVARCHAR(220),
	SongKey NVARCHAR(220)
);

CREATE TABLE IF NOT EXISTS "muso" (
	MusoId INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL,
	FirstName NVARCHAR(220),
	LastName NVARCHAR(220),
    PrimaryInstrumentId INTEGER,
    SecondaryInstrumentId INTEGER, 
    FOREIGN KEY ([PrimaryInstrumentId]) REFERENCES "instrument" ([InstrumentId])
		ON DELETE NO ACTION ON UPDATE NO ACTION,
    FOREIGN KEY ([SecondaryInstrumentId]) REFERENCES "instrument" ([InstrumentId])
		ON DELETE NO ACTION ON UPDATE NO ACTION
);

CREATE TABLE IF NOT EXISTS "instrument" (
	InstrumentId INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL,
	InstrumentName NVARCHAR(220)
);

CREATE TABLE IF NOT EXISTS "campus" (
	CampusId INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL,
	CampusName NVARCHAR(220),
	CampusAddress NVARCHAR(220)
);

CREATE TABLE IF NOT EXISTS "service" (
	ServiceId INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL,
    ServiceName NVARCHAR(220),
	ServiceSchedule DATETIME NOT NULL,
	CampusId NVARCHAR(220),
	SongListId INTEGER,
	MusoListId INTEGER,
    FOREIGN KEY ([CampusId]) REFERENCES "campus" ([CampusId])
		ON DELETE NO ACTION ON UPDATE NO ACTION,
    FOREIGN KEY ([SongListId]) REFERENCES "songlist" ([SongListId])
		ON DELETE NO ACTION ON UPDATE NO ACTION,
    FOREIGN KEY ([MusoListId]) REFERENCES "musolit" ([MusoListId])
		ON DELETE NO ACTION ON UPDATE NO ACTION
);

CREATE TABLE IF NOT EXISTS "songlist" (
	SongListId INTEGER NOT NULL,
	SongId INTEGER,
    FOREIGN KEY ([SongId]) REFERENCES "songs" ([SongId])
		ON DELETE NO ACTION ON UPDATE NO ACTION
);

CREATE TABLE IF NOT EXISTS "musolist" (
	MusoListId INTEGER NOT NULL,
	MusoId INTEGER,
    FOREIGN KEY ([MusoId]) REFERENCES "muso" ([MusoId])
		ON DELETE NO ACTION ON UPDATE NO ACTION
);
